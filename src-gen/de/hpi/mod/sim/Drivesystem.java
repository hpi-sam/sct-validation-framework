/** Generated by YAKINDU Statechart Tools code generator. */
package de.hpi.mod.sim;

import com.yakindu.core.IStatemachine;
import com.yakindu.core.ITimed;
import com.yakindu.core.ITimerService;
import java.util.LinkedList;
import java.util.Queue;

public class Drivesystem implements IStatemachine, ITimed {
	public static class Processor {
		private boolean arrived;
		
		
		protected void raiseArrived() {
			arrived = true;
		}
		public boolean isRaisedArrived() {
			return arrived;
		}
		
		
	}
	
	public static class Actors {
		private boolean startUnload;
		
		
		protected void raiseStartUnload() {
			startUnload = true;
		}
		public boolean isRaisedStartUnload() {
			return startUnload;
		}
		
		
		private boolean driveForward;
		
		
		protected void raiseDriveForward() {
			driveForward = true;
		}
		public boolean isRaisedDriveForward() {
			return driveForward;
		}
		
		
		private boolean driveBackward;
		
		
		protected void raiseDriveBackward() {
			driveBackward = true;
		}
		public boolean isRaisedDriveBackward() {
			return driveBackward;
		}
		
		
		private boolean turnLeft;
		
		
		protected void raiseTurnLeft() {
			turnLeft = true;
		}
		public boolean isRaisedTurnLeft() {
			return turnLeft;
		}
		
		
		private boolean turnRight;
		
		
		protected void raiseTurnRight() {
			turnRight = true;
		}
		public boolean isRaisedTurnRight() {
			return turnRight;
		}
		
		
	}
	
	public static class Data {
		public interface OperationCallback {
		
			public long posOrientation();
			
			public long posType();
			
			public long targetDirection();
			
			public boolean isOnTarget();
			
			public boolean canUnloadToTarget();
			
			public boolean canChargeAtTarget();
			
			public boolean blockedLeft();
			
			public boolean blockedFront();
			
			public boolean blockedRight();
			
			public boolean blockedWaypointAhead();
			
			public boolean blockedWaypointLeft();
			
			public boolean blockedWaypointRight();
			
			public boolean blockedCrossroadAhead();
			
			public boolean blockedCrossroadRight();
			
		}
		
		private OperationCallback operationCallback;
		
		public void setOperationCallback(OperationCallback operationCallback) {
			this.operationCallback = operationCallback;
		}
	}
	
	public static class RawData {
		public interface OperationCallback {
		
			public long posX();
			
			public long posY();
			
			public long targetX();
			
			public long targetY();
			
		}
		
		private OperationCallback operationCallback;
		
		public void setOperationCallback(OperationCallback operationCallback) {
			this.operationCallback = operationCallback;
		}
	}
	
	public static class PositionType {
		private long wAYPOINT;
		
		public long getWAYPOINT() {
			return wAYPOINT;
		}
		
		public void setWAYPOINT(long value) {
			this.wAYPOINT = value;
		}
		
		private long sTATION;
		
		public long getSTATION() {
			return sTATION;
		}
		
		public void setSTATION(long value) {
			this.sTATION = value;
		}
		
		private long cROSSROAD;
		
		public long getCROSSROAD() {
			return cROSSROAD;
		}
		
		public void setCROSSROAD(long value) {
			this.cROSSROAD = value;
		}
		
		private long bLOCKED;
		
		public long getBLOCKED() {
			return bLOCKED;
		}
		
		public void setBLOCKED(long value) {
			this.bLOCKED = value;
		}
		
	}
	
	public static class Orientation {
		private long nORTH;
		
		public long getNORTH() {
			return nORTH;
		}
		
		public void setNORTH(long value) {
			this.nORTH = value;
		}
		
		private long eAST;
		
		public long getEAST() {
			return eAST;
		}
		
		public void setEAST(long value) {
			this.eAST = value;
		}
		
		private long sOUTH;
		
		public long getSOUTH() {
			return sOUTH;
		}
		
		public void setSOUTH(long value) {
			this.sOUTH = value;
		}
		
		private long wEST;
		
		public long getWEST() {
			return wEST;
		}
		
		public void setWEST(long value) {
			this.wEST = value;
		}
		
	}
	
	public static class Direction {
		private long lEFT;
		
		public long getLEFT() {
			return lEFT;
		}
		
		public void setLEFT(long value) {
			this.lEFT = value;
		}
		
		private long aHEAD;
		
		public long getAHEAD() {
			return aHEAD;
		}
		
		public void setAHEAD(long value) {
			this.aHEAD = value;
		}
		
		private long rIGHT;
		
		public long getRIGHT() {
			return rIGHT;
		}
		
		public void setRIGHT(long value) {
			this.rIGHT = value;
		}
		
		private long bEHIND;
		
		public long getBEHIND() {
			return bEHIND;
		}
		
		public void setBEHIND(long value) {
			this.bEHIND = value;
		}
		
	}
	
	public static class DriveMode {
		private long uNSET;
		
		public long getUNSET() {
			return uNSET;
		}
		
		public void setUNSET(long value) {
			this.uNSET = value;
		}
		
		private long dRIVE;
		
		public long getDRIVE() {
			return dRIVE;
		}
		
		public void setDRIVE(long value) {
			this.dRIVE = value;
		}
		
		private long cHARGE;
		
		public long getCHARGE() {
			return cHARGE;
		}
		
		public void setCHARGE(long value) {
			this.cHARGE = value;
		}
		
		private long uNLOAD;
		
		public long getUNLOAD() {
			return uNLOAD;
		}
		
		public void setUNLOAD(long value) {
			this.uNLOAD = value;
		}
		
	}
	
	protected Processor processor;
	
	protected Actors actors;
	
	protected Data data;
	
	protected RawData rawData;
	
	protected PositionType positionType;
	
	protected Orientation orientation;
	
	protected Direction direction;
	
	protected DriveMode driveMode;
	
	public enum State {
		DRIVE_SYSTEM_IDLE,
		DRIVE_SYSTEM_WAITING_ON_WAYPOINT_OR_STATION,
		DRIVE_SYSTEM_LEAVING_CORASSROAD,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_WAITING,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD1,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_RIGHT,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD1,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_LEFT,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD2,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_1,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_1,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_1,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_2,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_2,
		DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2,
		DRIVE_SYSTEM_ENTERING_CROSSROAD,
		DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_ON_WAYPOINT,
		DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_TO_ENSURE_REAL_DEADLOCK,
		DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_ENTERING_CROSSROAD,
		DRIVE_SYSTEM_DRIVING_IN_STATION,
		DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_RIGHT,
		DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_LEFT,
		DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_DRIVE,
		DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_WAIT_TO_DRIVE,
		DRIVE_SYSTEM_UNLOADING,
		DRIVE_SYSTEM_UNLOADING__UNLOADING_UNLOADING,
		DRIVE_SYSTEM_UNLOADING__UNLOADING_TURNING,
		DRIVE_SYSTEM_UNLOADING__UNLOADING_WAITING_FOR_DATA,
		DRIVE_SYSTEM_ENTERING_CHARGER,
		DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_PARKING,
		DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_TURNING,
		DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_WAITING_FOR_DATA,
		$NULLSTATE$
	};
	
	private final State[] stateVector = new State[1];
	
	private int nextStateIndex;
	
	private ITimerService timerService;
	
	private final boolean[] timeEvents = new boolean[1];
	
	private Queue<Runnable> inEventQueue = new LinkedList<Runnable>();
	private long waitedForDeadlock;
	
	protected long getWaitedForDeadlock() {
		return waitedForDeadlock;
	}
	
	protected void setWaitedForDeadlock(long value) {
		this.waitedForDeadlock = value;
	}
	
	
	private long driveModeVariable;
	
	protected long getDriveModeVariable() {
		return driveModeVariable;
	}
	
	protected void setDriveModeVariable(long value) {
		this.driveModeVariable = value;
	}
	
	
	private boolean isExecuting;
	
	protected boolean getIsExecuting() {
		return isExecuting;
	}
	
	protected void setIsExecuting(boolean value) {
		this.isExecuting = value;
	}
	public Drivesystem() {
		processor = new Processor();
		actors = new Actors();
		data = new Data();
		rawData = new RawData();
		positionType = new PositionType();
		orientation = new Orientation();
		direction = new Direction();
		driveMode = new DriveMode();
		for (int i = 0; i < 1; i++) {
			stateVector[i] = State.$NULLSTATE$;
		}
		
		clearInEvents();
		clearOutEvents();
		
		setWaitedForDeadlock(0);
		
		setDriveModeVariable(0);
		
		positionType.setWAYPOINT(0);
		
		positionType.setSTATION(1);
		
		positionType.setCROSSROAD(2);
		
		positionType.setBLOCKED(3);
		
		orientation.setNORTH(0);
		
		orientation.setEAST(1);
		
		orientation.setSOUTH(2);
		
		orientation.setWEST(3);
		
		direction.setLEFT(0);
		
		direction.setAHEAD(1);
		
		direction.setRIGHT(2);
		
		direction.setBEHIND(3);
		
		driveMode.setUNSET(0);
		
		driveMode.setDRIVE(1);
		
		driveMode.setCHARGE(2);
		
		driveMode.setUNLOAD(3);
		
		isExecuting = false;
	}
	
	public void enter() {
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		if (this.data.operationCallback == null) {
			throw new IllegalStateException("Operation callback for interface Data must be set.");
		}
		
		if (this.rawData.operationCallback == null) {
			throw new IllegalStateException("Operation callback for interface RawData must be set.");
		}
		
		
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		enterSequence_Drive_System_default();
		isExecuting = false;
	}
	
	public void exit() {
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		exitSequence_Drive_System();
		isExecuting = false;
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public boolean isActive() {
		return stateVector[0] != State.$NULLSTATE$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public boolean isFinal() {
		return false;
	}
	private void clearOutEvents() {
		processor.arrived = false;
		actors.startUnload = false;
		actors.driveForward = false;
		actors.driveBackward = false;
		actors.turnLeft = false;
		actors.turnRight = false;
	}
	
	private void clearInEvents() {
		dataRefresh = false;
		newTarget = false;
		newUnloadingTarget = false;
		newChargingTarget = false;
		actionCompleted = false;
		timeEvents[0] = false;
	}
	
	private void runCycle() {
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		if (this.data.operationCallback == null) {
			throw new IllegalStateException("Operation callback for interface Data must be set.");
		}
		
		if (this.rawData.operationCallback == null) {
			throw new IllegalStateException("Operation callback for interface RawData must be set.");
		}
		
		
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		clearOutEvents();
		nextEvent();
		do { 
			for (nextStateIndex = 0; nextStateIndex < stateVector.length; nextStateIndex++) {
				switch (stateVector[nextStateIndex]) {
				case DRIVE_SYSTEM_IDLE:
					drive_System_idle_react(true);
					break;
				case DRIVE_SYSTEM_WAITING_ON_WAYPOINT_OR_STATION:
					drive_System_waiting_on_waypoint_or_station_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_WAITING:
					drive_System_leaving_corassroad__onCrossroadExiting_waiting_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD1:
					drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2:
					drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_RIGHT:
					drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD:
					drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD1:
					drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_LEFT:
					drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD2:
					drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3:
					drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_1:
					drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_1:
					drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_1:
					drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_2:
					drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_2:
					drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2_react(true);
					break;
				case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2:
					drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2_react(true);
					break;
				case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_ON_WAYPOINT:
					drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint_react(true);
					break;
				case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_TO_ENSURE_REAL_DEADLOCK:
					drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock_react(true);
					break;
				case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_ENTERING_CROSSROAD:
					drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad_react(true);
					break;
				case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_RIGHT:
					drive_System_driving_in_station__inStation_turn_right_react(true);
					break;
				case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_LEFT:
					drive_System_driving_in_station__inStation_turn_left_react(true);
					break;
				case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_DRIVE:
					drive_System_driving_in_station__inStation_drive_react(true);
					break;
				case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_WAIT_TO_DRIVE:
					drive_System_driving_in_station__inStation_wait_to_drive_react(true);
					break;
				case DRIVE_SYSTEM_UNLOADING__UNLOADING_UNLOADING:
					drive_System_unloading__unloading_unloading_react(true);
					break;
				case DRIVE_SYSTEM_UNLOADING__UNLOADING_TURNING:
					drive_System_unloading__unloading_turning_react(true);
					break;
				case DRIVE_SYSTEM_UNLOADING__UNLOADING_WAITING_FOR_DATA:
					drive_System_unloading__unloading_waiting_for_data_react(true);
					break;
				case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_PARKING:
					drive_System_entering_charger__startCharging_parking_react(true);
					break;
				case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_TURNING:
					drive_System_entering_charger__startCharging_turning_react(true);
					break;
				case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_WAITING_FOR_DATA:
					drive_System_entering_charger__startCharging_waiting_for_data_react(true);
					break;
				default:
					// $NULLSTATE$
				}
			}
			
			clearInEvents();
			nextEvent();
		} while ((((((dataRefresh || newTarget) || newUnloadingTarget) || newChargingTarget) || actionCompleted) || timeEvents[0]));
		
		isExecuting = false;
	}
	
	protected void nextEvent() {
		if(!inEventQueue.isEmpty()) {
			inEventQueue.poll().run();
			return;
		}
	}
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public boolean isStateActive(State state) {
	
		switch (state) {
		case DRIVE_SYSTEM_IDLE:
			return stateVector[0] == State.DRIVE_SYSTEM_IDLE;
		case DRIVE_SYSTEM_WAITING_ON_WAYPOINT_OR_STATION:
			return stateVector[0] == State.DRIVE_SYSTEM_WAITING_ON_WAYPOINT_OR_STATION;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_LEAVING_CORASSROAD.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2.ordinal();
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_WAITING:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_WAITING;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2.ordinal();
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD1:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD1;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD.ordinal();
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_RIGHT:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_RIGHT;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3.ordinal();
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD1:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD1;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_LEFT:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_LEFT;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD2:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD2;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2.ordinal();
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_1:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_1;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_1:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_1;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_1:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_1;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_2:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_2;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_2:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_2;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2:
			return stateVector[0] == State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2;
		case DRIVE_SYSTEM_ENTERING_CROSSROAD:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_ENTERING_CROSSROAD.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_ENTERING_CROSSROAD.ordinal();
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_ON_WAYPOINT:
			return stateVector[0] == State.DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_ON_WAYPOINT;
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_TO_ENSURE_REAL_DEADLOCK:
			return stateVector[0] == State.DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_TO_ENSURE_REAL_DEADLOCK;
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_ENTERING_CROSSROAD:
			return stateVector[0] == State.DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_ENTERING_CROSSROAD;
		case DRIVE_SYSTEM_DRIVING_IN_STATION:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_DRIVING_IN_STATION.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_WAIT_TO_DRIVE.ordinal();
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_RIGHT:
			return stateVector[0] == State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_RIGHT;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_LEFT:
			return stateVector[0] == State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_LEFT;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_DRIVE:
			return stateVector[0] == State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_DRIVE;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_WAIT_TO_DRIVE:
			return stateVector[0] == State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_WAIT_TO_DRIVE;
		case DRIVE_SYSTEM_UNLOADING:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_UNLOADING.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_UNLOADING__UNLOADING_WAITING_FOR_DATA.ordinal();
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_UNLOADING:
			return stateVector[0] == State.DRIVE_SYSTEM_UNLOADING__UNLOADING_UNLOADING;
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_TURNING:
			return stateVector[0] == State.DRIVE_SYSTEM_UNLOADING__UNLOADING_TURNING;
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_WAITING_FOR_DATA:
			return stateVector[0] == State.DRIVE_SYSTEM_UNLOADING__UNLOADING_WAITING_FOR_DATA;
		case DRIVE_SYSTEM_ENTERING_CHARGER:
			return stateVector[0].ordinal() >= State.
					DRIVE_SYSTEM_ENTERING_CHARGER.ordinal()&& stateVector[0].ordinal() <= State.DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_WAITING_FOR_DATA.ordinal();
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_PARKING:
			return stateVector[0] == State.DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_PARKING;
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_TURNING:
			return stateVector[0] == State.DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_TURNING;
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_WAITING_FOR_DATA:
			return stateVector[0] == State.DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_WAITING_FOR_DATA;
		default:
			return false;
		}
	}
	
	public void setTimerService(ITimerService timerService) {
		this.timerService = timerService;
	}
	
	public ITimerService getTimerService() {
		return timerService;
	}
	
	public void raiseTimeEvent(int eventID) {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				timeEvents[eventID] = true;
			}
		});
		runCycle();
	}
	
	public Processor processor() {
		return processor;
	}
	
	public Actors actors() {
		return actors;
	}
	
	public Data data() {
		return data;
	}
	
	public RawData rawData() {
		return rawData;
	}
	
	public PositionType positionType() {
		return positionType;
	}
	
	public Orientation orientation() {
		return orientation;
	}
	
	public Direction direction() {
		return direction;
	}
	
	public DriveMode driveMode() {
		return driveMode;
	}
	
	private boolean dataRefresh;
	
	
	public void raiseDataRefresh() {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				dataRefresh = true;
			}
		});
		runCycle();
	}
	
	private boolean newTarget;
	
	
	public void raiseNewTarget() {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				newTarget = true;
			}
		});
		runCycle();
	}
	
	private boolean newUnloadingTarget;
	
	
	public void raiseNewUnloadingTarget() {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				newUnloadingTarget = true;
			}
		});
		runCycle();
	}
	
	private boolean newChargingTarget;
	
	
	public void raiseNewChargingTarget() {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				newChargingTarget = true;
			}
		});
		runCycle();
	}
	
	private boolean actionCompleted;
	
	
	public void raiseActionCompleted() {
		inEventQueue.add(new Runnable() {
			@Override
			public void run() {
				actionCompleted = true;
			}
		});
		runCycle();
	}
	
	private boolean check_Drive_System__choice_0_tr0_tr0() {
		return (getDriveModeVariable()==driveMode.getUNLOAD() && data.operationCallback.canUnloadToTarget());
	}
	
	private boolean check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr0_tr0() {
		return data.operationCallback.targetDirection()==direction.getBEHIND();
	}
	
	private boolean check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr1_tr1() {
		return (data.operationCallback.targetDirection()==direction.getRIGHT() && !data.operationCallback.blockedWaypointRight());
	}
	
	private boolean check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr2_tr2() {
		return ((data.operationCallback.targetDirection()==direction.getAHEAD() && !data.operationCallback.blockedWaypointAhead()) && !data.operationCallback.blockedCrossroadAhead());
	}
	
	private boolean check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr3_tr3() {
		return ((data.operationCallback.targetDirection()==direction.getLEFT() && !data.operationCallback.blockedWaypointLeft()) && !data.operationCallback.blockedCrossroadAhead());
	}
	
	private boolean check_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_0_tr0_tr0() {
		return !data.operationCallback.blockedFront();
	}
	
	private boolean check_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_1_tr0_tr0() {
		return !data.operationCallback.blockedFront();
	}
	
	private boolean check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr0_tr0() {
		return (((data.operationCallback.posOrientation()==orientation.getEAST() || data.operationCallback.posOrientation()==orientation.getWEST())) && !data.operationCallback.blockedCrossroadAhead());
	}
	
	private boolean check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr1_tr1() {
		return (((data.operationCallback.posOrientation()==orientation.getSOUTH() || data.operationCallback.posOrientation()==orientation.getNORTH())) && !data.operationCallback.blockedWaypointRight());
	}
	
	private boolean check_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr1_tr1() {
		return (getWaitedForDeadlock()>5 && ((data.operationCallback.targetDirection()==direction.getRIGHT() || data.operationCallback.targetDirection()==direction.getBEHIND())));
	}
	
	private boolean check_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr2_tr2() {
		return (getWaitedForDeadlock()>10 && data.operationCallback.targetDirection()==direction.getAHEAD());
	}
	
	private boolean check_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr1_tr1() {
		return ((((((!data.operationCallback.blockedCrossroadAhead() && data.operationCallback.blockedWaypointAhead()) && data.operationCallback.blockedWaypointLeft()) && data.operationCallback.blockedWaypointRight()) && data.operationCallback.posOrientation()==orientation.getSOUTH())) || ((data.operationCallback.blockedCrossroadAhead() && !data.operationCallback.blockedFront())));
	}
	
	private boolean check_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr2_tr2() {
		return (!data.operationCallback.blockedCrossroadAhead() && !data.operationCallback.blockedWaypointRight());
	}
	
	private boolean check_Drive_System_driving_in_station__inStation__choice_0_tr0_tr0() {
		return data.operationCallback.targetDirection()==direction.getAHEAD();
	}
	
	private boolean check_Drive_System_driving_in_station__inStation__choice_2_tr0_tr0() {
		return data.operationCallback.targetDirection()==direction.getLEFT();
	}
	
	private boolean check_Drive_System_driving_in_station__inStation__choice_3_tr0_tr0() {
		return (((data.operationCallback.targetDirection()==direction.getLEFT() || data.operationCallback.targetDirection()==direction.getRIGHT())) && !data.operationCallback.blockedFront());
	}
	
	private boolean check_Drive_System_driving_in_station__inStation__choice_4_tr0_tr0() {
		return !data.operationCallback.blockedFront();
	}
	
	private boolean check_Drive_System__choice_1_tr0_tr0() {
		return (getDriveModeVariable()==driveMode.getDRIVE() && data.operationCallback.isOnTarget());
	}
	
	private boolean check_Drive_System__choice_2_tr0_tr0() {
		return data.operationCallback.posType()==positionType.getSTATION();
	}
	
	private boolean check_Drive_System__choice_2_tr1_tr1() {
		return data.operationCallback.posType()==positionType.getWAYPOINT();
	}
	
	private boolean check_Drive_System_unloading__unloading__choice_1_tr1_tr1() {
		return data.operationCallback.targetDirection()==direction.getRIGHT();
	}
	
	private boolean check_Drive_System__choice_3_tr0_tr0() {
		return (getDriveModeVariable()==driveMode.getCHARGE() && data.operationCallback.canChargeAtTarget());
	}
	
	private boolean check_Drive_System_entering_charger__startCharging__choice_1_tr1_tr1() {
		return data.operationCallback.targetDirection()==direction.getBEHIND();
	}
	
	private void effect_Drive_System_leaving_corassroad_tr0() {
		exitSequence_Drive_System_leaving_corassroad();
		react_Drive_System__choice_4();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead_tr0() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead();
		react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_2();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_tr0() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side();
		react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_2();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_tr0() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side();
		react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_2();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_tr0() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad();
		react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_2();
	}
	
	private void effect_Drive_System_entering_crossroad_tr0() {
		exitSequence_Drive_System_entering_crossroad();
		enterSequence_Drive_System_leaving_corassroad_default();
		react();
	}
	
	private void effect_Drive_System_driving_in_station_tr0() {
		exitSequence_Drive_System_driving_in_station();
		react_Drive_System__choice_4();
	}
	
	private void effect_Drive_System_unloading_tr0() {
		exitSequence_Drive_System_unloading();
		react_Drive_System__choice_5();
	}
	
	private void effect_Drive_System_entering_charger_tr0() {
		exitSequence_Drive_System_entering_charger();
		react_Drive_System__choice_5();
	}
	
	private void effect_Drive_System__choice_0_tr0() {
		enterSequence_Drive_System_unloading_default();
	}
	
	private void effect_Drive_System__choice_0_tr1() {
		react_Drive_System__choice_3();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr0() {
		react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr1() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr2() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr3() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr4() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_waiting_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_0_tr0() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_0_tr1() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_1_tr0() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_1_tr1() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr0() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr1() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr2() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_waiting_default();
	}
	
	private void effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_2_tr0() {
		react_Drive_System_leaving_corassroad__onCrossroadExiting__exit_Default();
	}
	
	private void effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr1() {
		enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad_default();
	}
	
	private void effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr2() {
		enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad_default();
	}
	
	private void effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr0() {
		enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock_default();
	}
	
	private void effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr1() {
		react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0();
	}
	
	private void effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr2() {
		enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad_default();
	}
	
	private void effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr0() {
		enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint_default();
	}
	
	private void effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_2_tr0() {
		react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_0_tr0() {
		react_Drive_System_driving_in_station__inStation__choice_4();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_0_tr1() {
		react_Drive_System_driving_in_station__inStation__choice_3();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_1_tr0() {
		react_Drive_System_driving_in_station__inStation__exit_Default();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_2_tr0() {
		enterSequence_Drive_System_driving_in_station__inStation_turn_left_default();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_2_tr1() {
		enterSequence_Drive_System_driving_in_station__inStation_turn_right_default();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_3_tr0() {
		enterSequence_Drive_System_driving_in_station__inStation_drive_default();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_3_tr1() {
		react_Drive_System_driving_in_station__inStation__choice_2();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_4_tr0() {
		enterSequence_Drive_System_driving_in_station__inStation_drive_default();
	}
	
	private void effect_Drive_System_driving_in_station__inStation__choice_4_tr1() {
		enterSequence_Drive_System_driving_in_station__inStation_wait_to_drive_default();
	}
	
	private void effect_Drive_System__choice_1_tr0() {
		react_Drive_System__choice_6();
	}
	
	private void effect_Drive_System__choice_1_tr1() {
		react_Drive_System__choice_0();
	}
	
	private void effect_Drive_System__choice_2_tr0() {
		enterSequence_Drive_System_driving_in_station_default();
	}
	
	private void effect_Drive_System__choice_2_tr1() {
		enterSequence_Drive_System_entering_crossroad_default();
	}
	
	private void effect_Drive_System__choice_2_tr2() {
		enterSequence_Drive_System_waiting_on_waypoint_or_station_default();
	}
	
	private void effect_Drive_System_unloading__unloading__choice_0_tr0() {
		react_Drive_System_unloading__unloading__choice_1();
	}
	
	private void effect_Drive_System_unloading__unloading__choice_1_tr1() {
		enterSequence_Drive_System_unloading__unloading_unloading_default();
	}
	
	private void effect_Drive_System_unloading__unloading__choice_1_tr0() {
		enterSequence_Drive_System_unloading__unloading_turning_default();
	}
	
	private void effect_Drive_System__choice_3_tr0() {
		enterSequence_Drive_System_entering_charger_default();
	}
	
	private void effect_Drive_System__choice_3_tr1() {
		react_Drive_System__choice_2();
	}
	
	private void effect_Drive_System_entering_charger__startCharging__choice_0_tr0() {
		react_Drive_System_entering_charger__startCharging__choice_1();
	}
	
	private void effect_Drive_System_entering_charger__startCharging__choice_1_tr1() {
		enterSequence_Drive_System_entering_charger__startCharging_parking_default();
	}
	
	private void effect_Drive_System_entering_charger__startCharging__choice_1_tr0() {
		enterSequence_Drive_System_entering_charger__startCharging_turning_default();
	}
	
	private void effect_Drive_System__choice_4_tr0() {
		enterSequence_Drive_System_waiting_on_waypoint_or_station_default();
	}
	
	private void effect_Drive_System__choice_5_tr0() {
		react_Drive_System__choice_6();
	}
	
	private void effect_Drive_System__choice_6_tr0() {
		processor.raiseArrived();
		
		setDriveModeVariable(driveMode.uNSET);
		
		enterSequence_Drive_System_idle_default();
	}
	
	/* Entry action for state 'forward1'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'forward2'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'right'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right() {
		actors.raiseTurnRight();
	}
	
	/* Entry action for state 'forward'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'forward1'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'left'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left() {
		actors.raiseTurnLeft();
	}
	
	/* Entry action for state 'forward2'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'forward3'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'turining left 1'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1() {
		actors.raiseTurnLeft();
	}
	
	/* Entry action for state 'driving forward 1'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'turining left 2'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2() {
		actors.raiseTurnLeft();
	}
	
	/* Entry action for state 'driving forward 2'. */
	private void entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'waiting to ensure real deadlock'. */
	private void entryAction_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock() {
		timerService.setTimer(this, 0, (1 * 1000), false);
	}
	
	/* Entry action for state 'entering crossroad'. */
	private void entryAction_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad() {
		actors.raiseDriveForward();
		
		setWaitedForDeadlock(0);
	}
	
	/* Entry action for state 'turn right'. */
	private void entryAction_Drive_System_driving_in_station__inStation_turn_right() {
		actors.raiseTurnRight();
	}
	
	/* Entry action for state 'turn left'. */
	private void entryAction_Drive_System_driving_in_station__inStation_turn_left() {
		actors.raiseTurnLeft();
	}
	
	/* Entry action for state 'drive'. */
	private void entryAction_Drive_System_driving_in_station__inStation_drive() {
		actors.raiseDriveForward();
	}
	
	/* Entry action for state 'unloading'. */
	private void entryAction_Drive_System_unloading__unloading_unloading() {
		actors.raiseStartUnload();
	}
	
	/* Entry action for state 'turning'. */
	private void entryAction_Drive_System_unloading__unloading_turning() {
		actors.raiseTurnLeft();
	}
	
	/* Entry action for state 'parking'. */
	private void entryAction_Drive_System_entering_charger__startCharging_parking() {
		actors.raiseDriveBackward();
	}
	
	/* Entry action for state 'turning'. */
	private void entryAction_Drive_System_entering_charger__startCharging_turning() {
		actors.raiseTurnLeft();
	}
	
	/* Exit action for state 'waiting to ensure real deadlock'. */
	private void exitAction_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock() {
		timerService.unsetTimer(this, 0);
	}
	
	/* 'default' enter sequence for state idle */
	private void enterSequence_Drive_System_idle_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_IDLE;
	}
	
	/* 'default' enter sequence for state waiting on waypoint or station */
	private void enterSequence_Drive_System_waiting_on_waypoint_or_station_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_WAITING_ON_WAYPOINT_OR_STATION;
	}
	
	/* 'default' enter sequence for state leaving corassroad */
	private void enterSequence_Drive_System_leaving_corassroad_default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_default();
	}
	
	/* 'default' enter sequence for state waiting */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_waiting_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_WAITING;
	}
	
	/* 'default' enter sequence for state leaving crossroad ahead */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead_default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_default();
	}
	
	/* 'default' enter sequence for state forward1 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD1;
	}
	
	/* 'default' enter sequence for state forward2 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2;
	}
	
	/* 'default' enter sequence for state leaving crossroad to right side */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_default();
	}
	
	/* 'default' enter sequence for state right */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_RIGHT;
	}
	
	/* 'default' enter sequence for state forward */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD;
	}
	
	/* 'default' enter sequence for state leaving crossroad to left side */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_default();
	}
	
	/* 'default' enter sequence for state forward1 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD1;
	}
	
	/* 'default' enter sequence for state left */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_LEFT;
	}
	
	/* 'default' enter sequence for state forward2 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD2;
	}
	
	/* 'default' enter sequence for state forward3 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3;
	}
	
	/* 'default' enter sequence for state turning around on crossroad */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_default();
	}
	
	/* 'default' enter sequence for state turining left 1 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_1;
	}
	
	/* 'default' enter sequence for state waiting to drive forward 1 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_1;
	}
	
	/* 'default' enter sequence for state driving forward 1 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_1;
	}
	
	/* 'default' enter sequence for state turining left 2 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_2;
	}
	
	/* 'default' enter sequence for state waiting to drive forward 2 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_2;
	}
	
	/* 'default' enter sequence for state driving forward 2 */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2_default() {
		entryAction_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2;
	}
	
	/* 'default' enter sequence for state entering crossroad */
	private void enterSequence_Drive_System_entering_crossroad_default() {
		enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_default();
	}
	
	/* 'default' enter sequence for state waiting on waypoint */
	private void enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_ON_WAYPOINT;
	}
	
	/* 'default' enter sequence for state waiting to ensure real deadlock */
	private void enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock_default() {
		entryAction_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_TO_ENSURE_REAL_DEADLOCK;
	}
	
	/* 'default' enter sequence for state entering crossroad */
	private void enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad_default() {
		entryAction_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_ENTERING_CROSSROAD;
	}
	
	/* 'default' enter sequence for state driving in station */
	private void enterSequence_Drive_System_driving_in_station_default() {
		enterSequence_Drive_System_driving_in_station__inStation_default();
	}
	
	/* 'default' enter sequence for state turn right */
	private void enterSequence_Drive_System_driving_in_station__inStation_turn_right_default() {
		entryAction_Drive_System_driving_in_station__inStation_turn_right();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_RIGHT;
	}
	
	/* 'default' enter sequence for state turn left */
	private void enterSequence_Drive_System_driving_in_station__inStation_turn_left_default() {
		entryAction_Drive_System_driving_in_station__inStation_turn_left();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_LEFT;
	}
	
	/* 'default' enter sequence for state drive */
	private void enterSequence_Drive_System_driving_in_station__inStation_drive_default() {
		entryAction_Drive_System_driving_in_station__inStation_drive();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_DRIVE;
	}
	
	/* 'default' enter sequence for state wait to drive */
	private void enterSequence_Drive_System_driving_in_station__inStation_wait_to_drive_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_WAIT_TO_DRIVE;
	}
	
	/* 'default' enter sequence for state unloading */
	private void enterSequence_Drive_System_unloading_default() {
		enterSequence_Drive_System_unloading__unloading_default();
	}
	
	/* 'default' enter sequence for state unloading */
	private void enterSequence_Drive_System_unloading__unloading_unloading_default() {
		entryAction_Drive_System_unloading__unloading_unloading();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_UNLOADING__UNLOADING_UNLOADING;
	}
	
	/* 'default' enter sequence for state turning */
	private void enterSequence_Drive_System_unloading__unloading_turning_default() {
		entryAction_Drive_System_unloading__unloading_turning();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_UNLOADING__UNLOADING_TURNING;
	}
	
	/* 'default' enter sequence for state waiting for data */
	private void enterSequence_Drive_System_unloading__unloading_waiting_for_data_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_UNLOADING__UNLOADING_WAITING_FOR_DATA;
	}
	
	/* 'default' enter sequence for state entering charger */
	private void enterSequence_Drive_System_entering_charger_default() {
		enterSequence_Drive_System_entering_charger__startCharging_default();
	}
	
	/* 'default' enter sequence for state parking */
	private void enterSequence_Drive_System_entering_charger__startCharging_parking_default() {
		entryAction_Drive_System_entering_charger__startCharging_parking();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_PARKING;
	}
	
	/* 'default' enter sequence for state turning */
	private void enterSequence_Drive_System_entering_charger__startCharging_turning_default() {
		entryAction_Drive_System_entering_charger__startCharging_turning();
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_TURNING;
	}
	
	/* 'default' enter sequence for state waiting for data */
	private void enterSequence_Drive_System_entering_charger__startCharging_waiting_for_data_default() {
		nextStateIndex = 0;
		stateVector[0] = State.DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_WAITING_FOR_DATA;
	}
	
	/* 'default' enter sequence for region Drive System */
	private void enterSequence_Drive_System_default() {
		react_Drive_System__entry_Default();
	}
	
	/* 'default' enter sequence for region _onCrossroadExiting */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_default() {
		react_Drive_System_leaving_corassroad__onCrossroadExiting__entry_Default();
	}
	
	/* 'default' enter sequence for region _onCrossroadDriveForward */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_default() {
		react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward__entry_Default();
	}
	
	/* 'default' enter sequence for region _onCrossroadDriveRight */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_default() {
		react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight__entry_Default();
	}
	
	/* 'default' enter sequence for region _onCrossroadDriveLeft */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_default() {
		react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft__entry_Default();
	}
	
	/* 'default' enter sequence for region _turningAroundOnCrossroad */
	private void enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_default() {
		react_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__entry_Default();
	}
	
	/* 'default' enter sequence for region _onWaypointEnteringCrossroad */
	private void enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_default() {
		react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__entry_Default();
	}
	
	/* 'default' enter sequence for region _inStation */
	private void enterSequence_Drive_System_driving_in_station__inStation_default() {
		react_Drive_System_driving_in_station__inStation__entry_Default();
	}
	
	/* 'default' enter sequence for region _unloading */
	private void enterSequence_Drive_System_unloading__unloading_default() {
		react_Drive_System_unloading__unloading__entry_Default();
	}
	
	/* 'default' enter sequence for region _startCharging */
	private void enterSequence_Drive_System_entering_charger__startCharging_default() {
		react_Drive_System_entering_charger__startCharging__entry_Default();
	}
	
	/* Default exit sequence for state idle */
	private void exitSequence_Drive_System_idle() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state waiting on waypoint or station */
	private void exitSequence_Drive_System_waiting_on_waypoint_or_station() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state leaving corassroad */
	private void exitSequence_Drive_System_leaving_corassroad() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting();
	}
	
	/* Default exit sequence for state waiting */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_waiting() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state leaving crossroad ahead */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward();
	}
	
	/* Default exit sequence for state forward1 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state forward2 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state leaving crossroad to right side */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight();
	}
	
	/* Default exit sequence for state right */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state forward */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state leaving crossroad to left side */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft();
	}
	
	/* Default exit sequence for state forward1 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state left */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state forward2 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state forward3 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state turning around on crossroad */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad() {
		exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad();
	}
	
	/* Default exit sequence for state turining left 1 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state waiting to drive forward 1 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state driving forward 1 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state turining left 2 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state waiting to drive forward 2 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state driving forward 2 */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state entering crossroad */
	private void exitSequence_Drive_System_entering_crossroad() {
		exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad();
	}
	
	/* Default exit sequence for state waiting on waypoint */
	private void exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state waiting to ensure real deadlock */
	private void exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
		
		exitAction_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock();
	}
	
	/* Default exit sequence for state entering crossroad */
	private void exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state driving in station */
	private void exitSequence_Drive_System_driving_in_station() {
		exitSequence_Drive_System_driving_in_station__inStation();
	}
	
	/* Default exit sequence for state turn right */
	private void exitSequence_Drive_System_driving_in_station__inStation_turn_right() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state turn left */
	private void exitSequence_Drive_System_driving_in_station__inStation_turn_left() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state drive */
	private void exitSequence_Drive_System_driving_in_station__inStation_drive() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state wait to drive */
	private void exitSequence_Drive_System_driving_in_station__inStation_wait_to_drive() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state unloading */
	private void exitSequence_Drive_System_unloading() {
		exitSequence_Drive_System_unloading__unloading();
	}
	
	/* Default exit sequence for state unloading */
	private void exitSequence_Drive_System_unloading__unloading_unloading() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state turning */
	private void exitSequence_Drive_System_unloading__unloading_turning() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state waiting for data */
	private void exitSequence_Drive_System_unloading__unloading_waiting_for_data() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state entering charger */
	private void exitSequence_Drive_System_entering_charger() {
		exitSequence_Drive_System_entering_charger__startCharging();
	}
	
	/* Default exit sequence for state parking */
	private void exitSequence_Drive_System_entering_charger__startCharging_parking() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state turning */
	private void exitSequence_Drive_System_entering_charger__startCharging_turning() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for state waiting for data */
	private void exitSequence_Drive_System_entering_charger__startCharging_waiting_for_data() {
		nextStateIndex = 0;
		stateVector[0] = State.$NULLSTATE$;
	}
	
	/* Default exit sequence for region Drive System */
	private void exitSequence_Drive_System() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_IDLE:
			exitSequence_Drive_System_idle();
			break;
		case DRIVE_SYSTEM_WAITING_ON_WAYPOINT_OR_STATION:
			exitSequence_Drive_System_waiting_on_waypoint_or_station();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_WAITING:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_waiting();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_RIGHT:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_LEFT:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2();
			break;
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_ON_WAYPOINT:
			exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint();
			break;
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_TO_ENSURE_REAL_DEADLOCK:
			exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock();
			break;
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_ENTERING_CROSSROAD:
			exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad();
			break;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_RIGHT:
			exitSequence_Drive_System_driving_in_station__inStation_turn_right();
			break;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_LEFT:
			exitSequence_Drive_System_driving_in_station__inStation_turn_left();
			break;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_DRIVE:
			exitSequence_Drive_System_driving_in_station__inStation_drive();
			break;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_WAIT_TO_DRIVE:
			exitSequence_Drive_System_driving_in_station__inStation_wait_to_drive();
			break;
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_UNLOADING:
			exitSequence_Drive_System_unloading__unloading_unloading();
			break;
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_TURNING:
			exitSequence_Drive_System_unloading__unloading_turning();
			break;
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_WAITING_FOR_DATA:
			exitSequence_Drive_System_unloading__unloading_waiting_for_data();
			break;
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_PARKING:
			exitSequence_Drive_System_entering_charger__startCharging_parking();
			break;
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_TURNING:
			exitSequence_Drive_System_entering_charger__startCharging_turning();
			break;
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_WAITING_FOR_DATA:
			exitSequence_Drive_System_entering_charger__startCharging_waiting_for_data();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _onCrossroadExiting */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_WAITING:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_waiting();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_RIGHT:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_LEFT:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _onCrossroadDriveForward */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_AHEAD__ONCROSSROADDRIVEFORWARD_FORWARD2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _onCrossroadDriveRight */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_RIGHT:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_RIGHT_SIDE__ONCROSSROADDRIVERIGHT_FORWARD:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _onCrossroadDriveLeft */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_LEFT:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_LEAVING_CROSSROAD_TO_LEFT_SIDE__ONCROSSROADDRIVELEFT_FORWARD3:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _turningAroundOnCrossroad */
	private void exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_1:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_TURINING_LEFT_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_WAITING_TO_DRIVE_FORWARD_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2();
			break;
		case DRIVE_SYSTEM_LEAVING_CORASSROAD__ONCROSSROADEXITING_TURNING_AROUND_ON_CROSSROAD__TURNINGAROUNDONCROSSROAD_DRIVING_FORWARD_2:
			exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _onWaypointEnteringCrossroad */
	private void exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_ON_WAYPOINT:
			exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint();
			break;
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_WAITING_TO_ENSURE_REAL_DEADLOCK:
			exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock();
			break;
		case DRIVE_SYSTEM_ENTERING_CROSSROAD__ONWAYPOINTENTERINGCROSSROAD_ENTERING_CROSSROAD:
			exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _inStation */
	private void exitSequence_Drive_System_driving_in_station__inStation() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_RIGHT:
			exitSequence_Drive_System_driving_in_station__inStation_turn_right();
			break;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_TURN_LEFT:
			exitSequence_Drive_System_driving_in_station__inStation_turn_left();
			break;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_DRIVE:
			exitSequence_Drive_System_driving_in_station__inStation_drive();
			break;
		case DRIVE_SYSTEM_DRIVING_IN_STATION__INSTATION_WAIT_TO_DRIVE:
			exitSequence_Drive_System_driving_in_station__inStation_wait_to_drive();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _unloading */
	private void exitSequence_Drive_System_unloading__unloading() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_UNLOADING:
			exitSequence_Drive_System_unloading__unloading_unloading();
			break;
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_TURNING:
			exitSequence_Drive_System_unloading__unloading_turning();
			break;
		case DRIVE_SYSTEM_UNLOADING__UNLOADING_WAITING_FOR_DATA:
			exitSequence_Drive_System_unloading__unloading_waiting_for_data();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region _startCharging */
	private void exitSequence_Drive_System_entering_charger__startCharging() {
		switch (stateVector[0]) {
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_PARKING:
			exitSequence_Drive_System_entering_charger__startCharging_parking();
			break;
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_TURNING:
			exitSequence_Drive_System_entering_charger__startCharging_turning();
			break;
		case DRIVE_SYSTEM_ENTERING_CHARGER__STARTCHARGING_WAITING_FOR_DATA:
			exitSequence_Drive_System_entering_charger__startCharging_waiting_for_data();
			break;
		default:
			break;
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System__choice_0() {
		if (check_Drive_System__choice_0_tr0_tr0()) {
			effect_Drive_System__choice_0_tr0();
		} else {
			effect_Drive_System__choice_0_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0() {
		if (check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr0_tr0()) {
			effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr0();
		} else {
			if (check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr1_tr1()) {
				effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr1();
			} else {
				if (check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr2_tr2()) {
					effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr2();
				} else {
					if (check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr3_tr3()) {
						effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr3();
					} else {
						effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0_tr4();
					}
				}
			}
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_0() {
		if (check_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_0_tr0_tr0()) {
			effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_0_tr0();
		} else {
			effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_0_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_1() {
		if (check_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_1_tr0_tr0()) {
			effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_1_tr0();
		} else {
			effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_1_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1() {
		if (check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr0_tr0()) {
			effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr0();
		} else {
			if (check_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr1_tr1()) {
				effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr1();
			} else {
				effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_1_tr2();
			}
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_2() {
		effect_Drive_System_leaving_corassroad__onCrossroadExiting__choice_2_tr0();
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0() {
		if (check_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr1_tr1()) {
			effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr1();
		} else {
			if (check_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr2_tr2()) {
				effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr2();
			} else {
				effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_0_tr0();
			}
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1() {
		if (check_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr1_tr1()) {
			effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr1();
		} else {
			if (check_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr2_tr2()) {
				effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr2();
			} else {
				effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_1_tr0();
			}
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_2() {
		effect_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_2_tr0();
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_driving_in_station__inStation__choice_0() {
		if (check_Drive_System_driving_in_station__inStation__choice_0_tr0_tr0()) {
			effect_Drive_System_driving_in_station__inStation__choice_0_tr0();
		} else {
			effect_Drive_System_driving_in_station__inStation__choice_0_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_driving_in_station__inStation__choice_1() {
		effect_Drive_System_driving_in_station__inStation__choice_1_tr0();
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_driving_in_station__inStation__choice_2() {
		if (check_Drive_System_driving_in_station__inStation__choice_2_tr0_tr0()) {
			effect_Drive_System_driving_in_station__inStation__choice_2_tr0();
		} else {
			effect_Drive_System_driving_in_station__inStation__choice_2_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_driving_in_station__inStation__choice_3() {
		if (check_Drive_System_driving_in_station__inStation__choice_3_tr0_tr0()) {
			effect_Drive_System_driving_in_station__inStation__choice_3_tr0();
		} else {
			effect_Drive_System_driving_in_station__inStation__choice_3_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_driving_in_station__inStation__choice_4() {
		if (check_Drive_System_driving_in_station__inStation__choice_4_tr0_tr0()) {
			effect_Drive_System_driving_in_station__inStation__choice_4_tr0();
		} else {
			effect_Drive_System_driving_in_station__inStation__choice_4_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System__choice_1() {
		if (check_Drive_System__choice_1_tr0_tr0()) {
			effect_Drive_System__choice_1_tr0();
		} else {
			effect_Drive_System__choice_1_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System__choice_2() {
		if (check_Drive_System__choice_2_tr0_tr0()) {
			effect_Drive_System__choice_2_tr0();
		} else {
			if (check_Drive_System__choice_2_tr1_tr1()) {
				effect_Drive_System__choice_2_tr1();
			} else {
				effect_Drive_System__choice_2_tr2();
			}
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_unloading__unloading__choice_0() {
		effect_Drive_System_unloading__unloading__choice_0_tr0();
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_unloading__unloading__choice_1() {
		if (check_Drive_System_unloading__unloading__choice_1_tr1_tr1()) {
			effect_Drive_System_unloading__unloading__choice_1_tr1();
		} else {
			effect_Drive_System_unloading__unloading__choice_1_tr0();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System__choice_3() {
		if (check_Drive_System__choice_3_tr0_tr0()) {
			effect_Drive_System__choice_3_tr0();
		} else {
			effect_Drive_System__choice_3_tr1();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_entering_charger__startCharging__choice_0() {
		effect_Drive_System_entering_charger__startCharging__choice_0_tr0();
	}
	
	/* The reactions of state null. */
	private void react_Drive_System_entering_charger__startCharging__choice_1() {
		if (check_Drive_System_entering_charger__startCharging__choice_1_tr1_tr1()) {
			effect_Drive_System_entering_charger__startCharging__choice_1_tr1();
		} else {
			effect_Drive_System_entering_charger__startCharging__choice_1_tr0();
		}
	}
	
	/* The reactions of state null. */
	private void react_Drive_System__choice_4() {
		effect_Drive_System__choice_4_tr0();
	}
	
	/* The reactions of state null. */
	private void react_Drive_System__choice_5() {
		effect_Drive_System__choice_5_tr0();
	}
	
	/* The reactions of state null. */
	private void react_Drive_System__choice_6() {
		effect_Drive_System__choice_6_tr0();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System__entry_Default() {
		enterSequence_Drive_System_idle_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward__entry_Default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight__entry_Default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft__entry_Default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__entry_Default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting__entry_Default() {
		enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_waiting_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__entry_Default() {
		react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_2();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_driving_in_station__inStation__entry_Default() {
		react_Drive_System_driving_in_station__inStation__choice_0();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_unloading__unloading__entry_Default() {
		react_Drive_System_unloading__unloading__choice_0();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Drive_System_entering_charger__startCharging__entry_Default() {
		react_Drive_System_entering_charger__startCharging__choice_0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward__exit_Default() {
		effect_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead_tr0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight__exit_Default() {
		effect_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_tr0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft__exit_Default() {
		effect_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_tr0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__exit_Default() {
		effect_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_tr0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_leaving_corassroad__onCrossroadExiting__exit_Default() {
		effect_Drive_System_leaving_corassroad_tr0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__exit_Default() {
		effect_Drive_System_entering_crossroad_tr0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_driving_in_station__inStation__exit_Default() {
		effect_Drive_System_driving_in_station_tr0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_unloading__unloading__exit_Default() {
		effect_Drive_System_unloading_tr0();
	}
	
	/* The reactions of exit default. */
	private void react_Drive_System_entering_charger__startCharging__exit_Default() {
		effect_Drive_System_entering_charger_tr0();
	}
	
	private boolean react() {
		return false;
	}
	
	private boolean drive_System_idle_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (newTarget) {
				exitSequence_Drive_System_idle();
				setDriveModeVariable(driveMode.dRIVE);
				
				enterSequence_Drive_System_waiting_on_waypoint_or_station_default();
				react();
			} else {
				if (newChargingTarget) {
					exitSequence_Drive_System_idle();
					setDriveModeVariable(driveMode.cHARGE);
					
					enterSequence_Drive_System_waiting_on_waypoint_or_station_default();
					react();
				} else {
					if (newUnloadingTarget) {
						exitSequence_Drive_System_idle();
						setDriveModeVariable(driveMode.uNLOAD);
						
						enterSequence_Drive_System_waiting_on_waypoint_or_station_default();
						react();
					} else {
						did_transition = false;
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean drive_System_waiting_on_waypoint_or_station_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (dataRefresh) {
				exitSequence_Drive_System_waiting_on_waypoint_or_station();
				react_Drive_System__choice_1();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_waiting_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (dataRefresh) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_waiting();
				react_Drive_System_leaving_corassroad__onCrossroadExiting__choice_0();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward1();
				enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2_default();
				drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward_forward2();
				react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead__onCrossroadDriveForward__exit_Default();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_ahead_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_right();
				enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward_default();
				drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight_forward();
				react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side__onCrossroadDriveRight__exit_Default();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_right_side_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward1();
				enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left_default();
				drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_left();
				enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2_default();
				drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward2();
				enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3_default();
				drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft_forward3();
				react_Drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side__onCrossroadDriveLeft__exit_Default();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_leaving_crossroad_to_left_side_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_1();
				enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1_default();
				drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (dataRefresh) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_1();
				react_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_0();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_1();
				enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2_default();
				drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_turining_left_2();
				enterSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2_default();
				drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (dataRefresh) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_waiting_to_drive_forward_2();
				react_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__choice_1();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad_driving_forward_2();
				react_Drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad__turningAroundOnCrossroad__exit_Default();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_leaving_corassroad__onCrossroadExiting_turning_around_on_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_entering_crossroad_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (dataRefresh) {
				exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint();
				react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__choice_2();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_entering_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (timeEvents[0]) {
				exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_to_ensure_real_deadlock();
				setWaitedForDeadlock(getWaitedForDeadlock() + 1);
				
				enterSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_waiting_on_waypoint_default();
				drive_System_entering_crossroad_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_entering_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_entering_crossroad__onWaypointEnteringCrossroad_entering_crossroad();
				react_Drive_System_entering_crossroad__onWaypointEnteringCrossroad__exit_Default();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_entering_crossroad_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_driving_in_station_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean drive_System_driving_in_station__inStation_turn_right_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_driving_in_station__inStation_turn_right();
				react_Drive_System_driving_in_station__inStation__choice_1();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_driving_in_station_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_driving_in_station__inStation_turn_left_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_driving_in_station__inStation_turn_left();
				react_Drive_System_driving_in_station__inStation__choice_1();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_driving_in_station_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_driving_in_station__inStation_drive_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_driving_in_station__inStation_drive();
				react_Drive_System_driving_in_station__inStation__choice_1();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_driving_in_station_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_driving_in_station__inStation_wait_to_drive_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (dataRefresh) {
				exitSequence_Drive_System_driving_in_station__inStation_wait_to_drive();
				react_Drive_System_driving_in_station__inStation__choice_4();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_driving_in_station_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_unloading_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean drive_System_unloading__unloading_unloading_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_unloading__unloading_unloading();
				react_Drive_System_unloading__unloading__exit_Default();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_unloading_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_unloading__unloading_turning_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_unloading__unloading_turning();
				enterSequence_Drive_System_unloading__unloading_waiting_for_data_default();
				drive_System_unloading_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_unloading_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_unloading__unloading_waiting_for_data_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (dataRefresh) {
				exitSequence_Drive_System_unloading__unloading_waiting_for_data();
				react_Drive_System_unloading__unloading__choice_0();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_unloading_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_entering_charger_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean drive_System_entering_charger__startCharging_parking_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_entering_charger__startCharging_parking();
				react_Drive_System_entering_charger__startCharging__exit_Default();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_entering_charger_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_entering_charger__startCharging_turning_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (actionCompleted) {
				exitSequence_Drive_System_entering_charger__startCharging_turning();
				enterSequence_Drive_System_entering_charger__startCharging_waiting_for_data_default();
				drive_System_entering_charger_react(false);
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_entering_charger_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean drive_System_entering_charger__startCharging_waiting_for_data_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (dataRefresh) {
				exitSequence_Drive_System_entering_charger__startCharging_waiting_for_data();
				react_Drive_System_entering_charger__startCharging__choice_0();
			} else {
				did_transition = false;
			}
		}
		if (did_transition==false) {
			did_transition = drive_System_entering_charger_react(try_transition);
		}
		return did_transition;
	}
	
}
